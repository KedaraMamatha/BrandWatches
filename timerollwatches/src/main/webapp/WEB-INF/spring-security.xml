<?xml version="1.0" encoding="UTF-8"?>  
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
		<context:annotation-config></context:annotation-config>
		<!-- <context:component-scan base-package="com.backend"></context:component-scan>
		<http>
	      <intercept-url pattern="/userhome" access="ROLE_USER"/>
	      <form-login login-page="/login" default-target-url="/userhome" />
	      <intercept-url pattern="/adminhome" access="ROLE_ADMIN"/>
	      <form-login login-page="/login" default-target-url="/adminhome" />
	      <logout logout-success-url="/logout" />
		</http>
		 <authentication-manager>
	<authentication-provider>
	             <jdbc-user-service data-source-ref="dataSource" 
	  users-by-username-query="select username,password,enabled from users where username=?" 
	 users-by-emaiId-query="select firstname,emailId,password,enabled from users where username=?"
	authorities-by-username-query="select u1.username, u2.authority from users u1, userrole u2 where u1.user_id= u2.userid and u1.username =?" />
	</authentication-provider>
	</authentication-manager> -->
		</beans:beans> 